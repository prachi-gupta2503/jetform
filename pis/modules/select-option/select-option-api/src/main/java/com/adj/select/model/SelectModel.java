/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.adj.select.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Select service. Represents a row in the &quot;select_option_Select&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.adj.select.model.impl.SelectModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.adj.select.model.impl.SelectImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Select
 * @generated
 */
@ProviderType
public interface SelectModel extends BaseModel<Select> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a select model instance should use the {@link Select} interface instead.
	 */

	/**
	 * Returns the primary key of this select.
	 *
	 * @return the primary key of this select
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this select.
	 *
	 * @param primaryKey the primary key of this select
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the id field name of this select.
	 *
	 * @return the id field name of this select
	 */
	@AutoEscape
	public String getIdFieldName();

	/**
	 * Sets the id field name of this select.
	 *
	 * @param idFieldName the id field name of this select
	 */
	public void setIdFieldName(String idFieldName);

	/**
	 * Returns the value field name of this select.
	 *
	 * @return the value field name of this select
	 */
	@AutoEscape
	public String getValueFieldName();

	/**
	 * Sets the value field name of this select.
	 *
	 * @param valueFieldName the value field name of this select
	 */
	public void setValueFieldName(String valueFieldName);

	/**
	 * Returns the table name of this select.
	 *
	 * @return the table name of this select
	 */
	@AutoEscape
	public String getTableName();

	/**
	 * Sets the table name of this select.
	 *
	 * @param tableName the table name of this select
	 */
	public void setTableName(String tableName);

}