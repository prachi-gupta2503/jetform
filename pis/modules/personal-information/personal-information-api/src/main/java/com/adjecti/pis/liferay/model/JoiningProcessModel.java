/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.adjecti.pis.liferay.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the JoiningProcess service. Represents a row in the &quot;pis_JoiningProcess&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.adjecti.pis.liferay.model.impl.JoiningProcessModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.adjecti.pis.liferay.model.impl.JoiningProcessImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see JoiningProcess
 * @generated
 */
@ProviderType
public interface JoiningProcessModel
	extends BaseModel<JoiningProcess>, GroupedModel, ShardedModel,
			StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a joining process model instance should use the {@link JoiningProcess} interface instead.
	 */

	/**
	 * Returns the primary key of this joining process.
	 *
	 * @return the primary key of this joining process
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this joining process.
	 *
	 * @param primaryKey the primary key of this joining process
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this joining process.
	 *
	 * @return the uuid of this joining process
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this joining process.
	 *
	 * @param uuid the uuid of this joining process
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the joining process ID of this joining process.
	 *
	 * @return the joining process ID of this joining process
	 */
	public long getJoiningProcessId();

	/**
	 * Sets the joining process ID of this joining process.
	 *
	 * @param joiningProcessId the joining process ID of this joining process
	 */
	public void setJoiningProcessId(long joiningProcessId);

	/**
	 * Returns the group ID of this joining process.
	 *
	 * @return the group ID of this joining process
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this joining process.
	 *
	 * @param groupId the group ID of this joining process
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this joining process.
	 *
	 * @return the company ID of this joining process
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this joining process.
	 *
	 * @param companyId the company ID of this joining process
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this joining process.
	 *
	 * @return the user ID of this joining process
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this joining process.
	 *
	 * @param userId the user ID of this joining process
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this joining process.
	 *
	 * @return the user uuid of this joining process
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this joining process.
	 *
	 * @param userUuid the user uuid of this joining process
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this joining process.
	 *
	 * @return the user name of this joining process
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this joining process.
	 *
	 * @param userName the user name of this joining process
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this joining process.
	 *
	 * @return the create date of this joining process
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this joining process.
	 *
	 * @param createDate the create date of this joining process
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this joining process.
	 *
	 * @return the modified date of this joining process
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this joining process.
	 *
	 * @param modifiedDate the modified date of this joining process
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the name of this joining process.
	 *
	 * @return the name of this joining process
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this joining process.
	 *
	 * @param name the name of this joining process
	 */
	public void setName(String name);

	/**
	 * Returns the description of this joining process.
	 *
	 * @return the description of this joining process
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this joining process.
	 *
	 * @param description the description of this joining process
	 */
	public void setDescription(String description);

	/**
	 * Returns the reason of this joining process.
	 *
	 * @return the reason of this joining process
	 */
	@AutoEscape
	public String getReason();

	/**
	 * Sets the reason of this joining process.
	 *
	 * @param reason the reason of this joining process
	 */
	public void setReason(String reason);

	/**
	 * Returns the personal no of this joining process.
	 *
	 * @return the personal no of this joining process
	 */
	public long getPersonalNo();

	/**
	 * Sets the personal no of this joining process.
	 *
	 * @param personalNo the personal no of this joining process
	 */
	public void setPersonalNo(long personalNo);

	/**
	 * Returns the unit ID of this joining process.
	 *
	 * @return the unit ID of this joining process
	 */
	public long getUnitId();

	/**
	 * Sets the unit ID of this joining process.
	 *
	 * @param unitId the unit ID of this joining process
	 */
	public void setUnitId(long unitId);

	/**
	 * Returns the process file ID of this joining process.
	 *
	 * @return the process file ID of this joining process
	 */
	public long getProcessFileId();

	/**
	 * Sets the process file ID of this joining process.
	 *
	 * @param processFileId the process file ID of this joining process
	 */
	public void setProcessFileId(long processFileId);

	/**
	 * Returns the process file no of this joining process.
	 *
	 * @return the process file no of this joining process
	 */
	public long getProcessFileNo();

	/**
	 * Sets the process file no of this joining process.
	 *
	 * @param processFileNo the process file no of this joining process
	 */
	public void setProcessFileNo(long processFileNo);

	/**
	 * Returns the noting content of this joining process.
	 *
	 * @return the noting content of this joining process
	 */
	@AutoEscape
	public String getNotingContent();

	/**
	 * Sets the noting content of this joining process.
	 *
	 * @param notingContent the noting content of this joining process
	 */
	public void setNotingContent(String notingContent);

	/**
	 * Returns the noting submitted date of this joining process.
	 *
	 * @return the noting submitted date of this joining process
	 */
	public Date getNotingSubmittedDate();

	/**
	 * Sets the noting submitted date of this joining process.
	 *
	 * @param notingSubmittedDate the noting submitted date of this joining process
	 */
	public void setNotingSubmittedDate(Date notingSubmittedDate);

	/**
	 * Returns the noting approved date of this joining process.
	 *
	 * @return the noting approved date of this joining process
	 */
	public Date getNotingApprovedDate();

	/**
	 * Sets the noting approved date of this joining process.
	 *
	 * @param notingApprovedDate the noting approved date of this joining process
	 */
	public void setNotingApprovedDate(Date notingApprovedDate);

	/**
	 * Returns the process status of this joining process.
	 *
	 * @return the process status of this joining process
	 */
	public int getProcessStatus();

	/**
	 * Sets the process status of this joining process.
	 *
	 * @param processStatus the process status of this joining process
	 */
	public void setProcessStatus(int processStatus);

	/**
	 * Returns the process completed date of this joining process.
	 *
	 * @return the process completed date of this joining process
	 */
	public Date getProcessCompletedDate();

	/**
	 * Sets the process completed date of this joining process.
	 *
	 * @param processCompletedDate the process completed date of this joining process
	 */
	public void setProcessCompletedDate(Date processCompletedDate);

	/**
	 * Returns the review date of this joining process.
	 *
	 * @return the review date of this joining process
	 */
	public Date getReviewDate();

	/**
	 * Sets the review date of this joining process.
	 *
	 * @param reviewDate the review date of this joining process
	 */
	public void setReviewDate(Date reviewDate);

	/**
	 * Returns the reviewer user ID of this joining process.
	 *
	 * @return the reviewer user ID of this joining process
	 */
	public long getReviewerUserId();

	/**
	 * Sets the reviewer user ID of this joining process.
	 *
	 * @param reviewerUserId the reviewer user ID of this joining process
	 */
	public void setReviewerUserId(long reviewerUserId);

	/**
	 * Returns the reviewer user uuid of this joining process.
	 *
	 * @return the reviewer user uuid of this joining process
	 */
	public String getReviewerUserUuid();

	/**
	 * Sets the reviewer user uuid of this joining process.
	 *
	 * @param reviewerUserUuid the reviewer user uuid of this joining process
	 */
	public void setReviewerUserUuid(String reviewerUserUuid);

	/**
	 * Returns the approve date of this joining process.
	 *
	 * @return the approve date of this joining process
	 */
	public Date getApproveDate();

	/**
	 * Sets the approve date of this joining process.
	 *
	 * @param approveDate the approve date of this joining process
	 */
	public void setApproveDate(Date approveDate);

	/**
	 * Returns the approver user ID of this joining process.
	 *
	 * @return the approver user ID of this joining process
	 */
	public long getApproverUserId();

	/**
	 * Sets the approver user ID of this joining process.
	 *
	 * @param approverUserId the approver user ID of this joining process
	 */
	public void setApproverUserId(long approverUserId);

	/**
	 * Returns the approver user uuid of this joining process.
	 *
	 * @return the approver user uuid of this joining process
	 */
	public String getApproverUserUuid();

	/**
	 * Sets the approver user uuid of this joining process.
	 *
	 * @param approverUserUuid the approver user uuid of this joining process
	 */
	public void setApproverUserUuid(String approverUserUuid);

}