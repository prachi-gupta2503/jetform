/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.adjecti.pis.liferay.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the EmployeeDigitalSignature service. Represents a row in the &quot;pis_EmployeeDigitalSignature&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.adjecti.pis.liferay.model.impl.EmployeeDigitalSignatureModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.adjecti.pis.liferay.model.impl.EmployeeDigitalSignatureImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EmployeeDigitalSignature
 * @generated
 */
@ProviderType
public interface EmployeeDigitalSignatureModel
	extends BaseModel<EmployeeDigitalSignature>, GroupedModel, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a employee digital signature model instance should use the {@link EmployeeDigitalSignature} interface instead.
	 */

	/**
	 * Returns the primary key of this employee digital signature.
	 *
	 * @return the primary key of this employee digital signature
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this employee digital signature.
	 *
	 * @param primaryKey the primary key of this employee digital signature
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the employee digital signature ID of this employee digital signature.
	 *
	 * @return the employee digital signature ID of this employee digital signature
	 */
	public long getEmployeeDigitalSignatureId();

	/**
	 * Sets the employee digital signature ID of this employee digital signature.
	 *
	 * @param employeeDigitalSignatureId the employee digital signature ID of this employee digital signature
	 */
	public void setEmployeeDigitalSignatureId(long employeeDigitalSignatureId);

	/**
	 * Returns the group ID of this employee digital signature.
	 *
	 * @return the group ID of this employee digital signature
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this employee digital signature.
	 *
	 * @param groupId the group ID of this employee digital signature
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this employee digital signature.
	 *
	 * @return the company ID of this employee digital signature
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this employee digital signature.
	 *
	 * @param companyId the company ID of this employee digital signature
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this employee digital signature.
	 *
	 * @return the user ID of this employee digital signature
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this employee digital signature.
	 *
	 * @param userId the user ID of this employee digital signature
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this employee digital signature.
	 *
	 * @return the user uuid of this employee digital signature
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this employee digital signature.
	 *
	 * @param userUuid the user uuid of this employee digital signature
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this employee digital signature.
	 *
	 * @return the user name of this employee digital signature
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this employee digital signature.
	 *
	 * @param userName the user name of this employee digital signature
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this employee digital signature.
	 *
	 * @return the create date of this employee digital signature
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this employee digital signature.
	 *
	 * @param createDate the create date of this employee digital signature
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this employee digital signature.
	 *
	 * @return the modified date of this employee digital signature
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this employee digital signature.
	 *
	 * @param modifiedDate the modified date of this employee digital signature
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the employee ID of this employee digital signature.
	 *
	 * @return the employee ID of this employee digital signature
	 */
	public long getEmployeeId();

	/**
	 * Sets the employee ID of this employee digital signature.
	 *
	 * @param employeeId the employee ID of this employee digital signature
	 */
	public void setEmployeeId(long employeeId);

	/**
	 * Returns the cid of this employee digital signature.
	 *
	 * @return the cid of this employee digital signature
	 */
	@AutoEscape
	public String getCid();

	/**
	 * Sets the cid of this employee digital signature.
	 *
	 * @param cid the cid of this employee digital signature
	 */
	public void setCid(String cid);

	/**
	 * Returns the details of this employee digital signature.
	 *
	 * @return the details of this employee digital signature
	 */
	@AutoEscape
	public String getDetails();

	/**
	 * Sets the details of this employee digital signature.
	 *
	 * @param details the details of this employee digital signature
	 */
	public void setDetails(String details);

	/**
	 * Returns the issue date of this employee digital signature.
	 *
	 * @return the issue date of this employee digital signature
	 */
	public Date getIssueDate();

	/**
	 * Sets the issue date of this employee digital signature.
	 *
	 * @param issueDate the issue date of this employee digital signature
	 */
	public void setIssueDate(Date issueDate);

	/**
	 * Returns the revoke date of this employee digital signature.
	 *
	 * @return the revoke date of this employee digital signature
	 */
	public Date getRevokeDate();

	/**
	 * Sets the revoke date of this employee digital signature.
	 *
	 * @param revokeDate the revoke date of this employee digital signature
	 */
	public void setRevokeDate(Date revokeDate);

	/**
	 * Returns the revoked of this employee digital signature.
	 *
	 * @return the revoked of this employee digital signature
	 */
	public boolean getRevoked();

	/**
	 * Returns <code>true</code> if this employee digital signature is revoked.
	 *
	 * @return <code>true</code> if this employee digital signature is revoked; <code>false</code> otherwise
	 */
	public boolean isRevoked();

	/**
	 * Sets whether this employee digital signature is revoked.
	 *
	 * @param revoked the revoked of this employee digital signature
	 */
	public void setRevoked(boolean revoked);

}