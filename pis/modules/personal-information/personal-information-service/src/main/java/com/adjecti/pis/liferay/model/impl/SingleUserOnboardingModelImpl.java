/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.adjecti.pis.liferay.model.impl;

import com.adjecti.pis.liferay.model.SingleUserOnboarding;
import com.adjecti.pis.liferay.model.SingleUserOnboardingModel;
import com.adjecti.pis.liferay.model.SingleUserOnboardingSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SingleUserOnboarding service. Represents a row in the &quot;pis_SingleUserOnboarding&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SingleUserOnboardingModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SingleUserOnboardingImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SingleUserOnboardingImpl
 * @generated
 */
@JSON(strict = true)
public class SingleUserOnboardingModelImpl
	extends BaseModelImpl<SingleUserOnboarding>
	implements SingleUserOnboardingModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a single user onboarding model instance should use the <code>SingleUserOnboarding</code> interface instead.
	 */
	public static final String TABLE_NAME = "pis_SingleUserOnboarding";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"singleUserRegistrationId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"status", Types.INTEGER}, {"statusByUserId", Types.BIGINT},
		{"statusByUserName", Types.VARCHAR}, {"statusDate", Types.TIMESTAMP},
		{"recordNo", Types.BIGINT}, {"unitId", Types.BIGINT},
		{"unit", Types.VARCHAR}, {"personalNo", Types.BIGINT},
		{"firstName", Types.VARCHAR}, {"middleName", Types.VARCHAR},
		{"lastName", Types.VARCHAR}, {"genderId", Types.BIGINT},
		{"gender", Types.VARCHAR}, {"designationId", Types.BIGINT},
		{"designation", Types.VARCHAR}, {"designationCode", Types.VARCHAR},
		{"tradeId", Types.BIGINT}, {"trade", Types.VARCHAR},
		{"tradeCode", Types.VARCHAR}, {"gradeId", Types.BIGINT},
		{"grade", Types.VARCHAR}, {"gradeCode", Types.VARCHAR},
		{"dateOfBirth", Types.TIMESTAMP},
		{"dateOfJoiningOrganization", Types.TIMESTAMP},
		{"casteCategoryId", Types.BIGINT}, {"casteCategory", Types.VARCHAR},
		{"mobile", Types.BIGINT}, {"emailAddress", Types.VARCHAR},
		{"dateOfJoiningUnit", Types.TIMESTAMP}, {"gpfnpsType", Types.VARCHAR},
		{"gpfnpsNumber", Types.BIGINT}, {"sectionId", Types.BIGINT},
		{"section", Types.VARCHAR}, {"sectionCode", Types.VARCHAR},
		{"loginId", Types.VARCHAR}, {"idamUser", Types.BOOLEAN},
		{"emailAccess", Types.BOOLEAN}, {"digitalSigning", Types.BOOLEAN},
		{"eGovAccess", Types.BOOLEAN}, {"pisAccess", Types.BOOLEAN},
		{"state_", Types.VARCHAR}, {"idamUserCreated", Types.BOOLEAN},
		{"employeeCreated", Types.BOOLEAN}, {"appUserCreated", Types.BOOLEAN},
		{"postBox", Types.VARCHAR}, {"rank_", Types.BIGINT},
		{"description", Types.VARCHAR}, {"reason", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("singleUserRegistrationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("recordNo", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("unitId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("unit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("personalNo", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("firstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("middleName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("genderId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("gender", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("designationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("designation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("designationCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("trade", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gradeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("grade", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gradeCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateOfBirth", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dateOfJoiningOrganization", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("casteCategoryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("casteCategory", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mobile", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("emailAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateOfJoiningUnit", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("gpfnpsType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gpfnpsNumber", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sectionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("section", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sectionCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("loginId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("idamUser", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("emailAccess", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("digitalSigning", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("eGovAccess", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("pisAccess", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("state_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("idamUserCreated", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("employeeCreated", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("appUserCreated", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("postBox", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rank_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("reason", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table pis_SingleUserOnboarding (uuid_ VARCHAR(75) null,singleUserRegistrationId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null,recordNo LONG,unitId LONG,unit VARCHAR(75) null,personalNo LONG,firstName VARCHAR(75) null,middleName VARCHAR(75) null,lastName VARCHAR(75) null,genderId LONG,gender VARCHAR(75) null,designationId LONG,designation VARCHAR(75) null,designationCode VARCHAR(75) null,tradeId LONG,trade VARCHAR(75) null,tradeCode VARCHAR(75) null,gradeId LONG,grade VARCHAR(75) null,gradeCode VARCHAR(75) null,dateOfBirth DATE null,dateOfJoiningOrganization DATE null,casteCategoryId LONG,casteCategory VARCHAR(75) null,mobile LONG,emailAddress VARCHAR(75) null,dateOfJoiningUnit DATE null,gpfnpsType VARCHAR(75) null,gpfnpsNumber LONG,sectionId LONG,section VARCHAR(75) null,sectionCode VARCHAR(75) null,loginId VARCHAR(75) null,idamUser BOOLEAN,emailAccess BOOLEAN,digitalSigning BOOLEAN,eGovAccess BOOLEAN,pisAccess BOOLEAN,state_ VARCHAR(75) null,idamUserCreated BOOLEAN,employeeCreated BOOLEAN,appUserCreated BOOLEAN,postBox VARCHAR(75) null,rank_ LONG,description VARCHAR(75) null,reason VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table pis_SingleUserOnboarding";

	public static final String ORDER_BY_JPQL =
		" ORDER BY singleUserOnboarding.recordNo ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY pis_SingleUserOnboarding.recordNo ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long EMAILADDRESS_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long IDAMUSERCREATED_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long LOGINID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long PERSONALNO_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long RECORDNO_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long SECTIONID_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long STATE_COLUMN_BITMASK = 256L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long STATUS_COLUMN_BITMASK = 512L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long UNIT_COLUMN_BITMASK = 1024L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long UNITID_COLUMN_BITMASK = 2048L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long USERID_COLUMN_BITMASK = 4096L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8192L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static SingleUserOnboarding toModel(
		SingleUserOnboardingSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		SingleUserOnboarding model = new SingleUserOnboardingImpl();

		model.setUuid(soapModel.getUuid());
		model.setSingleUserRegistrationId(
			soapModel.getSingleUserRegistrationId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setStatus(soapModel.getStatus());
		model.setStatusByUserId(soapModel.getStatusByUserId());
		model.setStatusByUserName(soapModel.getStatusByUserName());
		model.setStatusDate(soapModel.getStatusDate());
		model.setRecordNo(soapModel.getRecordNo());
		model.setUnitId(soapModel.getUnitId());
		model.setUnit(soapModel.getUnit());
		model.setPersonalNo(soapModel.getPersonalNo());
		model.setFirstName(soapModel.getFirstName());
		model.setMiddleName(soapModel.getMiddleName());
		model.setLastName(soapModel.getLastName());
		model.setGenderId(soapModel.getGenderId());
		model.setGender(soapModel.getGender());
		model.setDesignationId(soapModel.getDesignationId());
		model.setDesignation(soapModel.getDesignation());
		model.setDesignationCode(soapModel.getDesignationCode());
		model.setTradeId(soapModel.getTradeId());
		model.setTrade(soapModel.getTrade());
		model.setTradeCode(soapModel.getTradeCode());
		model.setGradeId(soapModel.getGradeId());
		model.setGrade(soapModel.getGrade());
		model.setGradeCode(soapModel.getGradeCode());
		model.setDateOfBirth(soapModel.getDateOfBirth());
		model.setDateOfJoiningOrganization(
			soapModel.getDateOfJoiningOrganization());
		model.setCasteCategoryId(soapModel.getCasteCategoryId());
		model.setCasteCategory(soapModel.getCasteCategory());
		model.setMobile(soapModel.getMobile());
		model.setEmailAddress(soapModel.getEmailAddress());
		model.setDateOfJoiningUnit(soapModel.getDateOfJoiningUnit());
		model.setGpfnpsType(soapModel.getGpfnpsType());
		model.setGpfnpsNumber(soapModel.getGpfnpsNumber());
		model.setSectionId(soapModel.getSectionId());
		model.setSection(soapModel.getSection());
		model.setSectionCode(soapModel.getSectionCode());
		model.setLoginId(soapModel.getLoginId());
		model.setIdamUser(soapModel.isIdamUser());
		model.setEmailAccess(soapModel.isEmailAccess());
		model.setDigitalSigning(soapModel.isDigitalSigning());
		model.setEGovAccess(soapModel.isEGovAccess());
		model.setPisAccess(soapModel.isPisAccess());
		model.setState(soapModel.getState());
		model.setIdamUserCreated(soapModel.isIdamUserCreated());
		model.setEmployeeCreated(soapModel.isEmployeeCreated());
		model.setAppUserCreated(soapModel.isAppUserCreated());
		model.setPostBox(soapModel.getPostBox());
		model.setRank(soapModel.getRank());
		model.setDescription(soapModel.getDescription());
		model.setReason(soapModel.getReason());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<SingleUserOnboarding> toModels(
		SingleUserOnboardingSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<SingleUserOnboarding> models = new ArrayList<SingleUserOnboarding>(
			soapModels.length);

		for (SingleUserOnboardingSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public SingleUserOnboardingModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _singleUserRegistrationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSingleUserRegistrationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _singleUserRegistrationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SingleUserOnboarding.class;
	}

	@Override
	public String getModelClassName() {
		return SingleUserOnboarding.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SingleUserOnboarding, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<SingleUserOnboarding, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SingleUserOnboarding, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((SingleUserOnboarding)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SingleUserOnboarding, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SingleUserOnboarding, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SingleUserOnboarding)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SingleUserOnboarding, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SingleUserOnboarding, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, SingleUserOnboarding>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			SingleUserOnboarding.class.getClassLoader(),
			SingleUserOnboarding.class, ModelWrapper.class);

		try {
			Constructor<SingleUserOnboarding> constructor =
				(Constructor<SingleUserOnboarding>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<SingleUserOnboarding, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<SingleUserOnboarding, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<SingleUserOnboarding, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<SingleUserOnboarding, Object>>();
		Map<String, BiConsumer<SingleUserOnboarding, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<SingleUserOnboarding, ?>>();

		attributeGetterFunctions.put("uuid", SingleUserOnboarding::getUuid);
		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setUuid);
		attributeGetterFunctions.put(
			"singleUserRegistrationId",
			SingleUserOnboarding::getSingleUserRegistrationId);
		attributeSetterBiConsumers.put(
			"singleUserRegistrationId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setSingleUserRegistrationId);
		attributeGetterFunctions.put(
			"groupId", SingleUserOnboarding::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setGroupId);
		attributeGetterFunctions.put(
			"companyId", SingleUserOnboarding::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setCompanyId);
		attributeGetterFunctions.put("userId", SingleUserOnboarding::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setUserId);
		attributeGetterFunctions.put(
			"userName", SingleUserOnboarding::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setUserName);
		attributeGetterFunctions.put(
			"createDate", SingleUserOnboarding::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<SingleUserOnboarding, Date>)
				SingleUserOnboarding::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", SingleUserOnboarding::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<SingleUserOnboarding, Date>)
				SingleUserOnboarding::setModifiedDate);
		attributeGetterFunctions.put("status", SingleUserOnboarding::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<SingleUserOnboarding, Integer>)
				SingleUserOnboarding::setStatus);
		attributeGetterFunctions.put(
			"statusByUserId", SingleUserOnboarding::getStatusByUserId);
		attributeSetterBiConsumers.put(
			"statusByUserId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setStatusByUserId);
		attributeGetterFunctions.put(
			"statusByUserName", SingleUserOnboarding::getStatusByUserName);
		attributeSetterBiConsumers.put(
			"statusByUserName",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setStatusByUserName);
		attributeGetterFunctions.put(
			"statusDate", SingleUserOnboarding::getStatusDate);
		attributeSetterBiConsumers.put(
			"statusDate",
			(BiConsumer<SingleUserOnboarding, Date>)
				SingleUserOnboarding::setStatusDate);
		attributeGetterFunctions.put(
			"recordNo", SingleUserOnboarding::getRecordNo);
		attributeSetterBiConsumers.put(
			"recordNo",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setRecordNo);
		attributeGetterFunctions.put("unitId", SingleUserOnboarding::getUnitId);
		attributeSetterBiConsumers.put(
			"unitId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setUnitId);
		attributeGetterFunctions.put("unit", SingleUserOnboarding::getUnit);
		attributeSetterBiConsumers.put(
			"unit",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setUnit);
		attributeGetterFunctions.put(
			"personalNo", SingleUserOnboarding::getPersonalNo);
		attributeSetterBiConsumers.put(
			"personalNo",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setPersonalNo);
		attributeGetterFunctions.put(
			"firstName", SingleUserOnboarding::getFirstName);
		attributeSetterBiConsumers.put(
			"firstName",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setFirstName);
		attributeGetterFunctions.put(
			"middleName", SingleUserOnboarding::getMiddleName);
		attributeSetterBiConsumers.put(
			"middleName",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setMiddleName);
		attributeGetterFunctions.put(
			"lastName", SingleUserOnboarding::getLastName);
		attributeSetterBiConsumers.put(
			"lastName",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setLastName);
		attributeGetterFunctions.put(
			"genderId", SingleUserOnboarding::getGenderId);
		attributeSetterBiConsumers.put(
			"genderId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setGenderId);
		attributeGetterFunctions.put("gender", SingleUserOnboarding::getGender);
		attributeSetterBiConsumers.put(
			"gender",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setGender);
		attributeGetterFunctions.put(
			"designationId", SingleUserOnboarding::getDesignationId);
		attributeSetterBiConsumers.put(
			"designationId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setDesignationId);
		attributeGetterFunctions.put(
			"designation", SingleUserOnboarding::getDesignation);
		attributeSetterBiConsumers.put(
			"designation",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setDesignation);
		attributeGetterFunctions.put(
			"designationCode", SingleUserOnboarding::getDesignationCode);
		attributeSetterBiConsumers.put(
			"designationCode",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setDesignationCode);
		attributeGetterFunctions.put(
			"tradeId", SingleUserOnboarding::getTradeId);
		attributeSetterBiConsumers.put(
			"tradeId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setTradeId);
		attributeGetterFunctions.put("trade", SingleUserOnboarding::getTrade);
		attributeSetterBiConsumers.put(
			"trade",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setTrade);
		attributeGetterFunctions.put(
			"tradeCode", SingleUserOnboarding::getTradeCode);
		attributeSetterBiConsumers.put(
			"tradeCode",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setTradeCode);
		attributeGetterFunctions.put(
			"gradeId", SingleUserOnboarding::getGradeId);
		attributeSetterBiConsumers.put(
			"gradeId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setGradeId);
		attributeGetterFunctions.put("grade", SingleUserOnboarding::getGrade);
		attributeSetterBiConsumers.put(
			"grade",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setGrade);
		attributeGetterFunctions.put(
			"gradeCode", SingleUserOnboarding::getGradeCode);
		attributeSetterBiConsumers.put(
			"gradeCode",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setGradeCode);
		attributeGetterFunctions.put(
			"dateOfBirth", SingleUserOnboarding::getDateOfBirth);
		attributeSetterBiConsumers.put(
			"dateOfBirth",
			(BiConsumer<SingleUserOnboarding, Date>)
				SingleUserOnboarding::setDateOfBirth);
		attributeGetterFunctions.put(
			"dateOfJoiningOrganization",
			SingleUserOnboarding::getDateOfJoiningOrganization);
		attributeSetterBiConsumers.put(
			"dateOfJoiningOrganization",
			(BiConsumer<SingleUserOnboarding, Date>)
				SingleUserOnboarding::setDateOfJoiningOrganization);
		attributeGetterFunctions.put(
			"casteCategoryId", SingleUserOnboarding::getCasteCategoryId);
		attributeSetterBiConsumers.put(
			"casteCategoryId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setCasteCategoryId);
		attributeGetterFunctions.put(
			"casteCategory", SingleUserOnboarding::getCasteCategory);
		attributeSetterBiConsumers.put(
			"casteCategory",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setCasteCategory);
		attributeGetterFunctions.put("mobile", SingleUserOnboarding::getMobile);
		attributeSetterBiConsumers.put(
			"mobile",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setMobile);
		attributeGetterFunctions.put(
			"emailAddress", SingleUserOnboarding::getEmailAddress);
		attributeSetterBiConsumers.put(
			"emailAddress",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setEmailAddress);
		attributeGetterFunctions.put(
			"dateOfJoiningUnit", SingleUserOnboarding::getDateOfJoiningUnit);
		attributeSetterBiConsumers.put(
			"dateOfJoiningUnit",
			(BiConsumer<SingleUserOnboarding, Date>)
				SingleUserOnboarding::setDateOfJoiningUnit);
		attributeGetterFunctions.put(
			"gpfnpsType", SingleUserOnboarding::getGpfnpsType);
		attributeSetterBiConsumers.put(
			"gpfnpsType",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setGpfnpsType);
		attributeGetterFunctions.put(
			"gpfnpsNumber", SingleUserOnboarding::getGpfnpsNumber);
		attributeSetterBiConsumers.put(
			"gpfnpsNumber",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setGpfnpsNumber);
		attributeGetterFunctions.put(
			"sectionId", SingleUserOnboarding::getSectionId);
		attributeSetterBiConsumers.put(
			"sectionId",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setSectionId);
		attributeGetterFunctions.put(
			"section", SingleUserOnboarding::getSection);
		attributeSetterBiConsumers.put(
			"section",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setSection);
		attributeGetterFunctions.put(
			"sectionCode", SingleUserOnboarding::getSectionCode);
		attributeSetterBiConsumers.put(
			"sectionCode",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setSectionCode);
		attributeGetterFunctions.put(
			"loginId", SingleUserOnboarding::getLoginId);
		attributeSetterBiConsumers.put(
			"loginId",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setLoginId);
		attributeGetterFunctions.put(
			"idamUser", SingleUserOnboarding::getIdamUser);
		attributeSetterBiConsumers.put(
			"idamUser",
			(BiConsumer<SingleUserOnboarding, Boolean>)
				SingleUserOnboarding::setIdamUser);
		attributeGetterFunctions.put(
			"emailAccess", SingleUserOnboarding::getEmailAccess);
		attributeSetterBiConsumers.put(
			"emailAccess",
			(BiConsumer<SingleUserOnboarding, Boolean>)
				SingleUserOnboarding::setEmailAccess);
		attributeGetterFunctions.put(
			"digitalSigning", SingleUserOnboarding::getDigitalSigning);
		attributeSetterBiConsumers.put(
			"digitalSigning",
			(BiConsumer<SingleUserOnboarding, Boolean>)
				SingleUserOnboarding::setDigitalSigning);
		attributeGetterFunctions.put(
			"eGovAccess", SingleUserOnboarding::getEGovAccess);
		attributeSetterBiConsumers.put(
			"eGovAccess",
			(BiConsumer<SingleUserOnboarding, Boolean>)
				SingleUserOnboarding::setEGovAccess);
		attributeGetterFunctions.put(
			"pisAccess", SingleUserOnboarding::getPisAccess);
		attributeSetterBiConsumers.put(
			"pisAccess",
			(BiConsumer<SingleUserOnboarding, Boolean>)
				SingleUserOnboarding::setPisAccess);
		attributeGetterFunctions.put("state", SingleUserOnboarding::getState);
		attributeSetterBiConsumers.put(
			"state",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setState);
		attributeGetterFunctions.put(
			"idamUserCreated", SingleUserOnboarding::getIdamUserCreated);
		attributeSetterBiConsumers.put(
			"idamUserCreated",
			(BiConsumer<SingleUserOnboarding, Boolean>)
				SingleUserOnboarding::setIdamUserCreated);
		attributeGetterFunctions.put(
			"employeeCreated", SingleUserOnboarding::getEmployeeCreated);
		attributeSetterBiConsumers.put(
			"employeeCreated",
			(BiConsumer<SingleUserOnboarding, Boolean>)
				SingleUserOnboarding::setEmployeeCreated);
		attributeGetterFunctions.put(
			"appUserCreated", SingleUserOnboarding::getAppUserCreated);
		attributeSetterBiConsumers.put(
			"appUserCreated",
			(BiConsumer<SingleUserOnboarding, Boolean>)
				SingleUserOnboarding::setAppUserCreated);
		attributeGetterFunctions.put(
			"postBox", SingleUserOnboarding::getPostBox);
		attributeSetterBiConsumers.put(
			"postBox",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setPostBox);
		attributeGetterFunctions.put("rank", SingleUserOnboarding::getRank);
		attributeSetterBiConsumers.put(
			"rank",
			(BiConsumer<SingleUserOnboarding, Long>)
				SingleUserOnboarding::setRank);
		attributeGetterFunctions.put(
			"description", SingleUserOnboarding::getDescription);
		attributeSetterBiConsumers.put(
			"description",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setDescription);
		attributeGetterFunctions.put("reason", SingleUserOnboarding::getReason);
		attributeSetterBiConsumers.put(
			"reason",
			(BiConsumer<SingleUserOnboarding, String>)
				SingleUserOnboarding::setReason);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getSingleUserRegistrationId() {
		return _singleUserRegistrationId;
	}

	@Override
	public void setSingleUserRegistrationId(long singleUserRegistrationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_singleUserRegistrationId = singleUserRegistrationId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalUserId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("userId"));
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalStatus() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("status"));
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return "";
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusDate = statusDate;
	}

	@JSON
	@Override
	public long getRecordNo() {
		return _recordNo;
	}

	@Override
	public void setRecordNo(long recordNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_recordNo = recordNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalRecordNo() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("recordNo"));
	}

	@JSON
	@Override
	public long getUnitId() {
		return _unitId;
	}

	@Override
	public void setUnitId(long unitId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_unitId = unitId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalUnitId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("unitId"));
	}

	@JSON
	@Override
	public String getUnit() {
		if (_unit == null) {
			return "";
		}
		else {
			return _unit;
		}
	}

	@Override
	public void setUnit(String unit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_unit = unit;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUnit() {
		return getColumnOriginalValue("unit");
	}

	@JSON
	@Override
	public long getPersonalNo() {
		return _personalNo;
	}

	@Override
	public void setPersonalNo(long personalNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_personalNo = personalNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalPersonalNo() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("personalNo"));
	}

	@JSON
	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return "";
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_firstName = firstName;
	}

	@JSON
	@Override
	public String getMiddleName() {
		if (_middleName == null) {
			return "";
		}
		else {
			return _middleName;
		}
	}

	@Override
	public void setMiddleName(String middleName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_middleName = middleName;
	}

	@JSON
	@Override
	public String getLastName() {
		if (_lastName == null) {
			return "";
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lastName = lastName;
	}

	@JSON
	@Override
	public long getGenderId() {
		return _genderId;
	}

	@Override
	public void setGenderId(long genderId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_genderId = genderId;
	}

	@JSON
	@Override
	public String getGender() {
		if (_gender == null) {
			return "";
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gender = gender;
	}

	@JSON
	@Override
	public long getDesignationId() {
		return _designationId;
	}

	@Override
	public void setDesignationId(long designationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_designationId = designationId;
	}

	@JSON
	@Override
	public String getDesignation() {
		if (_designation == null) {
			return "";
		}
		else {
			return _designation;
		}
	}

	@Override
	public void setDesignation(String designation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_designation = designation;
	}

	@JSON
	@Override
	public String getDesignationCode() {
		if (_designationCode == null) {
			return "";
		}
		else {
			return _designationCode;
		}
	}

	@Override
	public void setDesignationCode(String designationCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_designationCode = designationCode;
	}

	@JSON
	@Override
	public long getTradeId() {
		return _tradeId;
	}

	@Override
	public void setTradeId(long tradeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeId = tradeId;
	}

	@JSON
	@Override
	public String getTrade() {
		if (_trade == null) {
			return "";
		}
		else {
			return _trade;
		}
	}

	@Override
	public void setTrade(String trade) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trade = trade;
	}

	@JSON
	@Override
	public String getTradeCode() {
		if (_tradeCode == null) {
			return "";
		}
		else {
			return _tradeCode;
		}
	}

	@Override
	public void setTradeCode(String tradeCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeCode = tradeCode;
	}

	@JSON
	@Override
	public long getGradeId() {
		return _gradeId;
	}

	@Override
	public void setGradeId(long gradeId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gradeId = gradeId;
	}

	@JSON
	@Override
	public String getGrade() {
		if (_grade == null) {
			return "";
		}
		else {
			return _grade;
		}
	}

	@Override
	public void setGrade(String grade) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_grade = grade;
	}

	@JSON
	@Override
	public String getGradeCode() {
		if (_gradeCode == null) {
			return "";
		}
		else {
			return _gradeCode;
		}
	}

	@Override
	public void setGradeCode(String gradeCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gradeCode = gradeCode;
	}

	@JSON
	@Override
	public Date getDateOfBirth() {
		return _dateOfBirth;
	}

	@Override
	public void setDateOfBirth(Date dateOfBirth) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateOfBirth = dateOfBirth;
	}

	@JSON
	@Override
	public Date getDateOfJoiningOrganization() {
		return _dateOfJoiningOrganization;
	}

	@Override
	public void setDateOfJoiningOrganization(Date dateOfJoiningOrganization) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateOfJoiningOrganization = dateOfJoiningOrganization;
	}

	@JSON
	@Override
	public long getCasteCategoryId() {
		return _casteCategoryId;
	}

	@Override
	public void setCasteCategoryId(long casteCategoryId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_casteCategoryId = casteCategoryId;
	}

	@JSON
	@Override
	public String getCasteCategory() {
		if (_casteCategory == null) {
			return "";
		}
		else {
			return _casteCategory;
		}
	}

	@Override
	public void setCasteCategory(String casteCategory) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_casteCategory = casteCategory;
	}

	@JSON
	@Override
	public long getMobile() {
		return _mobile;
	}

	@Override
	public void setMobile(long mobile) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mobile = mobile;
	}

	@JSON
	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return "";
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailAddress = emailAddress;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalEmailAddress() {
		return getColumnOriginalValue("emailAddress");
	}

	@JSON
	@Override
	public Date getDateOfJoiningUnit() {
		return _dateOfJoiningUnit;
	}

	@Override
	public void setDateOfJoiningUnit(Date dateOfJoiningUnit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateOfJoiningUnit = dateOfJoiningUnit;
	}

	@JSON
	@Override
	public String getGpfnpsType() {
		if (_gpfnpsType == null) {
			return "";
		}
		else {
			return _gpfnpsType;
		}
	}

	@Override
	public void setGpfnpsType(String gpfnpsType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gpfnpsType = gpfnpsType;
	}

	@JSON
	@Override
	public long getGpfnpsNumber() {
		return _gpfnpsNumber;
	}

	@Override
	public void setGpfnpsNumber(long gpfnpsNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gpfnpsNumber = gpfnpsNumber;
	}

	@JSON
	@Override
	public long getSectionId() {
		return _sectionId;
	}

	@Override
	public void setSectionId(long sectionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sectionId = sectionId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalSectionId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("sectionId"));
	}

	@JSON
	@Override
	public String getSection() {
		if (_section == null) {
			return "";
		}
		else {
			return _section;
		}
	}

	@Override
	public void setSection(String section) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_section = section;
	}

	@JSON
	@Override
	public String getSectionCode() {
		if (_sectionCode == null) {
			return "";
		}
		else {
			return _sectionCode;
		}
	}

	@Override
	public void setSectionCode(String sectionCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sectionCode = sectionCode;
	}

	@JSON
	@Override
	public String getLoginId() {
		if (_loginId == null) {
			return "";
		}
		else {
			return _loginId;
		}
	}

	@Override
	public void setLoginId(String loginId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_loginId = loginId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalLoginId() {
		return getColumnOriginalValue("loginId");
	}

	@JSON
	@Override
	public boolean getIdamUser() {
		return _idamUser;
	}

	@JSON
	@Override
	public boolean isIdamUser() {
		return _idamUser;
	}

	@Override
	public void setIdamUser(boolean idamUser) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_idamUser = idamUser;
	}

	@JSON
	@Override
	public boolean getEmailAccess() {
		return _emailAccess;
	}

	@JSON
	@Override
	public boolean isEmailAccess() {
		return _emailAccess;
	}

	@Override
	public void setEmailAccess(boolean emailAccess) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailAccess = emailAccess;
	}

	@JSON
	@Override
	public boolean getDigitalSigning() {
		return _digitalSigning;
	}

	@JSON
	@Override
	public boolean isDigitalSigning() {
		return _digitalSigning;
	}

	@Override
	public void setDigitalSigning(boolean digitalSigning) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_digitalSigning = digitalSigning;
	}

	@JSON
	@Override
	public boolean getEGovAccess() {
		return _eGovAccess;
	}

	@JSON
	@Override
	public boolean isEGovAccess() {
		return _eGovAccess;
	}

	@Override
	public void setEGovAccess(boolean eGovAccess) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_eGovAccess = eGovAccess;
	}

	@JSON
	@Override
	public boolean getPisAccess() {
		return _pisAccess;
	}

	@JSON
	@Override
	public boolean isPisAccess() {
		return _pisAccess;
	}

	@Override
	public void setPisAccess(boolean pisAccess) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pisAccess = pisAccess;
	}

	@JSON
	@Override
	public String getState() {
		if (_state == null) {
			return "";
		}
		else {
			return _state;
		}
	}

	@Override
	public void setState(String state) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_state = state;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalState() {
		return getColumnOriginalValue("state_");
	}

	@JSON
	@Override
	public boolean getIdamUserCreated() {
		return _idamUserCreated;
	}

	@JSON
	@Override
	public boolean isIdamUserCreated() {
		return _idamUserCreated;
	}

	@Override
	public void setIdamUserCreated(boolean idamUserCreated) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_idamUserCreated = idamUserCreated;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalIdamUserCreated() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("idamUserCreated"));
	}

	@JSON
	@Override
	public boolean getEmployeeCreated() {
		return _employeeCreated;
	}

	@JSON
	@Override
	public boolean isEmployeeCreated() {
		return _employeeCreated;
	}

	@Override
	public void setEmployeeCreated(boolean employeeCreated) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_employeeCreated = employeeCreated;
	}

	@JSON
	@Override
	public boolean getAppUserCreated() {
		return _appUserCreated;
	}

	@JSON
	@Override
	public boolean isAppUserCreated() {
		return _appUserCreated;
	}

	@Override
	public void setAppUserCreated(boolean appUserCreated) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_appUserCreated = appUserCreated;
	}

	@JSON
	@Override
	public String getPostBox() {
		if (_postBox == null) {
			return "";
		}
		else {
			return _postBox;
		}
	}

	@Override
	public void setPostBox(String postBox) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_postBox = postBox;
	}

	@JSON
	@Override
	public long getRank() {
		return _rank;
	}

	@Override
	public void setRank(long rank) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_rank = rank;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_description = description;
	}

	@JSON
	@Override
	public String getReason() {
		if (_reason == null) {
			return "";
		}
		else {
			return _reason;
		}
	}

	@Override
	public void setReason(String reason) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_reason = reason;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(SingleUserOnboarding.class.getName()));
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (entry.getValue() != getColumnValue(entry.getKey())) {
				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), SingleUserOnboarding.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SingleUserOnboarding toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SingleUserOnboarding>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SingleUserOnboardingImpl singleUserOnboardingImpl =
			new SingleUserOnboardingImpl();

		singleUserOnboardingImpl.setUuid(getUuid());
		singleUserOnboardingImpl.setSingleUserRegistrationId(
			getSingleUserRegistrationId());
		singleUserOnboardingImpl.setGroupId(getGroupId());
		singleUserOnboardingImpl.setCompanyId(getCompanyId());
		singleUserOnboardingImpl.setUserId(getUserId());
		singleUserOnboardingImpl.setUserName(getUserName());
		singleUserOnboardingImpl.setCreateDate(getCreateDate());
		singleUserOnboardingImpl.setModifiedDate(getModifiedDate());
		singleUserOnboardingImpl.setStatus(getStatus());
		singleUserOnboardingImpl.setStatusByUserId(getStatusByUserId());
		singleUserOnboardingImpl.setStatusByUserName(getStatusByUserName());
		singleUserOnboardingImpl.setStatusDate(getStatusDate());
		singleUserOnboardingImpl.setRecordNo(getRecordNo());
		singleUserOnboardingImpl.setUnitId(getUnitId());
		singleUserOnboardingImpl.setUnit(getUnit());
		singleUserOnboardingImpl.setPersonalNo(getPersonalNo());
		singleUserOnboardingImpl.setFirstName(getFirstName());
		singleUserOnboardingImpl.setMiddleName(getMiddleName());
		singleUserOnboardingImpl.setLastName(getLastName());
		singleUserOnboardingImpl.setGenderId(getGenderId());
		singleUserOnboardingImpl.setGender(getGender());
		singleUserOnboardingImpl.setDesignationId(getDesignationId());
		singleUserOnboardingImpl.setDesignation(getDesignation());
		singleUserOnboardingImpl.setDesignationCode(getDesignationCode());
		singleUserOnboardingImpl.setTradeId(getTradeId());
		singleUserOnboardingImpl.setTrade(getTrade());
		singleUserOnboardingImpl.setTradeCode(getTradeCode());
		singleUserOnboardingImpl.setGradeId(getGradeId());
		singleUserOnboardingImpl.setGrade(getGrade());
		singleUserOnboardingImpl.setGradeCode(getGradeCode());
		singleUserOnboardingImpl.setDateOfBirth(getDateOfBirth());
		singleUserOnboardingImpl.setDateOfJoiningOrganization(
			getDateOfJoiningOrganization());
		singleUserOnboardingImpl.setCasteCategoryId(getCasteCategoryId());
		singleUserOnboardingImpl.setCasteCategory(getCasteCategory());
		singleUserOnboardingImpl.setMobile(getMobile());
		singleUserOnboardingImpl.setEmailAddress(getEmailAddress());
		singleUserOnboardingImpl.setDateOfJoiningUnit(getDateOfJoiningUnit());
		singleUserOnboardingImpl.setGpfnpsType(getGpfnpsType());
		singleUserOnboardingImpl.setGpfnpsNumber(getGpfnpsNumber());
		singleUserOnboardingImpl.setSectionId(getSectionId());
		singleUserOnboardingImpl.setSection(getSection());
		singleUserOnboardingImpl.setSectionCode(getSectionCode());
		singleUserOnboardingImpl.setLoginId(getLoginId());
		singleUserOnboardingImpl.setIdamUser(isIdamUser());
		singleUserOnboardingImpl.setEmailAccess(isEmailAccess());
		singleUserOnboardingImpl.setDigitalSigning(isDigitalSigning());
		singleUserOnboardingImpl.setEGovAccess(isEGovAccess());
		singleUserOnboardingImpl.setPisAccess(isPisAccess());
		singleUserOnboardingImpl.setState(getState());
		singleUserOnboardingImpl.setIdamUserCreated(isIdamUserCreated());
		singleUserOnboardingImpl.setEmployeeCreated(isEmployeeCreated());
		singleUserOnboardingImpl.setAppUserCreated(isAppUserCreated());
		singleUserOnboardingImpl.setPostBox(getPostBox());
		singleUserOnboardingImpl.setRank(getRank());
		singleUserOnboardingImpl.setDescription(getDescription());
		singleUserOnboardingImpl.setReason(getReason());

		singleUserOnboardingImpl.resetOriginalValues();

		return singleUserOnboardingImpl;
	}

	@Override
	public int compareTo(SingleUserOnboarding singleUserOnboarding) {
		int value = 0;

		if (getRecordNo() < singleUserOnboarding.getRecordNo()) {
			value = -1;
		}
		else if (getRecordNo() > singleUserOnboarding.getRecordNo()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SingleUserOnboarding)) {
			return false;
		}

		SingleUserOnboarding singleUserOnboarding =
			(SingleUserOnboarding)object;

		long primaryKey = singleUserOnboarding.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SingleUserOnboarding> toCacheModel() {
		SingleUserOnboardingCacheModel singleUserOnboardingCacheModel =
			new SingleUserOnboardingCacheModel();

		singleUserOnboardingCacheModel.uuid = getUuid();

		String uuid = singleUserOnboardingCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			singleUserOnboardingCacheModel.uuid = null;
		}

		singleUserOnboardingCacheModel.singleUserRegistrationId =
			getSingleUserRegistrationId();

		singleUserOnboardingCacheModel.groupId = getGroupId();

		singleUserOnboardingCacheModel.companyId = getCompanyId();

		singleUserOnboardingCacheModel.userId = getUserId();

		singleUserOnboardingCacheModel.userName = getUserName();

		String userName = singleUserOnboardingCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			singleUserOnboardingCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			singleUserOnboardingCacheModel.createDate = createDate.getTime();
		}
		else {
			singleUserOnboardingCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			singleUserOnboardingCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			singleUserOnboardingCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		singleUserOnboardingCacheModel.status = getStatus();

		singleUserOnboardingCacheModel.statusByUserId = getStatusByUserId();

		singleUserOnboardingCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName =
			singleUserOnboardingCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			singleUserOnboardingCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			singleUserOnboardingCacheModel.statusDate = statusDate.getTime();
		}
		else {
			singleUserOnboardingCacheModel.statusDate = Long.MIN_VALUE;
		}

		singleUserOnboardingCacheModel.recordNo = getRecordNo();

		singleUserOnboardingCacheModel.unitId = getUnitId();

		singleUserOnboardingCacheModel.unit = getUnit();

		String unit = singleUserOnboardingCacheModel.unit;

		if ((unit != null) && (unit.length() == 0)) {
			singleUserOnboardingCacheModel.unit = null;
		}

		singleUserOnboardingCacheModel.personalNo = getPersonalNo();

		singleUserOnboardingCacheModel.firstName = getFirstName();

		String firstName = singleUserOnboardingCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			singleUserOnboardingCacheModel.firstName = null;
		}

		singleUserOnboardingCacheModel.middleName = getMiddleName();

		String middleName = singleUserOnboardingCacheModel.middleName;

		if ((middleName != null) && (middleName.length() == 0)) {
			singleUserOnboardingCacheModel.middleName = null;
		}

		singleUserOnboardingCacheModel.lastName = getLastName();

		String lastName = singleUserOnboardingCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			singleUserOnboardingCacheModel.lastName = null;
		}

		singleUserOnboardingCacheModel.genderId = getGenderId();

		singleUserOnboardingCacheModel.gender = getGender();

		String gender = singleUserOnboardingCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			singleUserOnboardingCacheModel.gender = null;
		}

		singleUserOnboardingCacheModel.designationId = getDesignationId();

		singleUserOnboardingCacheModel.designation = getDesignation();

		String designation = singleUserOnboardingCacheModel.designation;

		if ((designation != null) && (designation.length() == 0)) {
			singleUserOnboardingCacheModel.designation = null;
		}

		singleUserOnboardingCacheModel.designationCode = getDesignationCode();

		String designationCode = singleUserOnboardingCacheModel.designationCode;

		if ((designationCode != null) && (designationCode.length() == 0)) {
			singleUserOnboardingCacheModel.designationCode = null;
		}

		singleUserOnboardingCacheModel.tradeId = getTradeId();

		singleUserOnboardingCacheModel.trade = getTrade();

		String trade = singleUserOnboardingCacheModel.trade;

		if ((trade != null) && (trade.length() == 0)) {
			singleUserOnboardingCacheModel.trade = null;
		}

		singleUserOnboardingCacheModel.tradeCode = getTradeCode();

		String tradeCode = singleUserOnboardingCacheModel.tradeCode;

		if ((tradeCode != null) && (tradeCode.length() == 0)) {
			singleUserOnboardingCacheModel.tradeCode = null;
		}

		singleUserOnboardingCacheModel.gradeId = getGradeId();

		singleUserOnboardingCacheModel.grade = getGrade();

		String grade = singleUserOnboardingCacheModel.grade;

		if ((grade != null) && (grade.length() == 0)) {
			singleUserOnboardingCacheModel.grade = null;
		}

		singleUserOnboardingCacheModel.gradeCode = getGradeCode();

		String gradeCode = singleUserOnboardingCacheModel.gradeCode;

		if ((gradeCode != null) && (gradeCode.length() == 0)) {
			singleUserOnboardingCacheModel.gradeCode = null;
		}

		Date dateOfBirth = getDateOfBirth();

		if (dateOfBirth != null) {
			singleUserOnboardingCacheModel.dateOfBirth = dateOfBirth.getTime();
		}
		else {
			singleUserOnboardingCacheModel.dateOfBirth = Long.MIN_VALUE;
		}

		Date dateOfJoiningOrganization = getDateOfJoiningOrganization();

		if (dateOfJoiningOrganization != null) {
			singleUserOnboardingCacheModel.dateOfJoiningOrganization =
				dateOfJoiningOrganization.getTime();
		}
		else {
			singleUserOnboardingCacheModel.dateOfJoiningOrganization =
				Long.MIN_VALUE;
		}

		singleUserOnboardingCacheModel.casteCategoryId = getCasteCategoryId();

		singleUserOnboardingCacheModel.casteCategory = getCasteCategory();

		String casteCategory = singleUserOnboardingCacheModel.casteCategory;

		if ((casteCategory != null) && (casteCategory.length() == 0)) {
			singleUserOnboardingCacheModel.casteCategory = null;
		}

		singleUserOnboardingCacheModel.mobile = getMobile();

		singleUserOnboardingCacheModel.emailAddress = getEmailAddress();

		String emailAddress = singleUserOnboardingCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			singleUserOnboardingCacheModel.emailAddress = null;
		}

		Date dateOfJoiningUnit = getDateOfJoiningUnit();

		if (dateOfJoiningUnit != null) {
			singleUserOnboardingCacheModel.dateOfJoiningUnit =
				dateOfJoiningUnit.getTime();
		}
		else {
			singleUserOnboardingCacheModel.dateOfJoiningUnit = Long.MIN_VALUE;
		}

		singleUserOnboardingCacheModel.gpfnpsType = getGpfnpsType();

		String gpfnpsType = singleUserOnboardingCacheModel.gpfnpsType;

		if ((gpfnpsType != null) && (gpfnpsType.length() == 0)) {
			singleUserOnboardingCacheModel.gpfnpsType = null;
		}

		singleUserOnboardingCacheModel.gpfnpsNumber = getGpfnpsNumber();

		singleUserOnboardingCacheModel.sectionId = getSectionId();

		singleUserOnboardingCacheModel.section = getSection();

		String section = singleUserOnboardingCacheModel.section;

		if ((section != null) && (section.length() == 0)) {
			singleUserOnboardingCacheModel.section = null;
		}

		singleUserOnboardingCacheModel.sectionCode = getSectionCode();

		String sectionCode = singleUserOnboardingCacheModel.sectionCode;

		if ((sectionCode != null) && (sectionCode.length() == 0)) {
			singleUserOnboardingCacheModel.sectionCode = null;
		}

		singleUserOnboardingCacheModel.loginId = getLoginId();

		String loginId = singleUserOnboardingCacheModel.loginId;

		if ((loginId != null) && (loginId.length() == 0)) {
			singleUserOnboardingCacheModel.loginId = null;
		}

		singleUserOnboardingCacheModel.idamUser = isIdamUser();

		singleUserOnboardingCacheModel.emailAccess = isEmailAccess();

		singleUserOnboardingCacheModel.digitalSigning = isDigitalSigning();

		singleUserOnboardingCacheModel.eGovAccess = isEGovAccess();

		singleUserOnboardingCacheModel.pisAccess = isPisAccess();

		singleUserOnboardingCacheModel.state = getState();

		String state = singleUserOnboardingCacheModel.state;

		if ((state != null) && (state.length() == 0)) {
			singleUserOnboardingCacheModel.state = null;
		}

		singleUserOnboardingCacheModel.idamUserCreated = isIdamUserCreated();

		singleUserOnboardingCacheModel.employeeCreated = isEmployeeCreated();

		singleUserOnboardingCacheModel.appUserCreated = isAppUserCreated();

		singleUserOnboardingCacheModel.postBox = getPostBox();

		String postBox = singleUserOnboardingCacheModel.postBox;

		if ((postBox != null) && (postBox.length() == 0)) {
			singleUserOnboardingCacheModel.postBox = null;
		}

		singleUserOnboardingCacheModel.rank = getRank();

		singleUserOnboardingCacheModel.description = getDescription();

		String description = singleUserOnboardingCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			singleUserOnboardingCacheModel.description = null;
		}

		singleUserOnboardingCacheModel.reason = getReason();

		String reason = singleUserOnboardingCacheModel.reason;

		if ((reason != null) && (reason.length() == 0)) {
			singleUserOnboardingCacheModel.reason = null;
		}

		return singleUserOnboardingCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SingleUserOnboarding, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<SingleUserOnboarding, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SingleUserOnboarding, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply((SingleUserOnboarding)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<SingleUserOnboarding, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<SingleUserOnboarding, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SingleUserOnboarding, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply((SingleUserOnboarding)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, SingleUserOnboarding>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private long _singleUserRegistrationId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _status;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;
	private long _recordNo;
	private long _unitId;
	private String _unit;
	private long _personalNo;
	private String _firstName;
	private String _middleName;
	private String _lastName;
	private long _genderId;
	private String _gender;
	private long _designationId;
	private String _designation;
	private String _designationCode;
	private long _tradeId;
	private String _trade;
	private String _tradeCode;
	private long _gradeId;
	private String _grade;
	private String _gradeCode;
	private Date _dateOfBirth;
	private Date _dateOfJoiningOrganization;
	private long _casteCategoryId;
	private String _casteCategory;
	private long _mobile;
	private String _emailAddress;
	private Date _dateOfJoiningUnit;
	private String _gpfnpsType;
	private long _gpfnpsNumber;
	private long _sectionId;
	private String _section;
	private String _sectionCode;
	private String _loginId;
	private boolean _idamUser;
	private boolean _emailAccess;
	private boolean _digitalSigning;
	private boolean _eGovAccess;
	private boolean _pisAccess;
	private String _state;
	private boolean _idamUserCreated;
	private boolean _employeeCreated;
	private boolean _appUserCreated;
	private String _postBox;
	private long _rank;
	private String _description;
	private String _reason;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<SingleUserOnboarding, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SingleUserOnboarding)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put(
			"singleUserRegistrationId", _singleUserRegistrationId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("statusByUserId", _statusByUserId);
		_columnOriginalValues.put("statusByUserName", _statusByUserName);
		_columnOriginalValues.put("statusDate", _statusDate);
		_columnOriginalValues.put("recordNo", _recordNo);
		_columnOriginalValues.put("unitId", _unitId);
		_columnOriginalValues.put("unit", _unit);
		_columnOriginalValues.put("personalNo", _personalNo);
		_columnOriginalValues.put("firstName", _firstName);
		_columnOriginalValues.put("middleName", _middleName);
		_columnOriginalValues.put("lastName", _lastName);
		_columnOriginalValues.put("genderId", _genderId);
		_columnOriginalValues.put("gender", _gender);
		_columnOriginalValues.put("designationId", _designationId);
		_columnOriginalValues.put("designation", _designation);
		_columnOriginalValues.put("designationCode", _designationCode);
		_columnOriginalValues.put("tradeId", _tradeId);
		_columnOriginalValues.put("trade", _trade);
		_columnOriginalValues.put("tradeCode", _tradeCode);
		_columnOriginalValues.put("gradeId", _gradeId);
		_columnOriginalValues.put("grade", _grade);
		_columnOriginalValues.put("gradeCode", _gradeCode);
		_columnOriginalValues.put("dateOfBirth", _dateOfBirth);
		_columnOriginalValues.put(
			"dateOfJoiningOrganization", _dateOfJoiningOrganization);
		_columnOriginalValues.put("casteCategoryId", _casteCategoryId);
		_columnOriginalValues.put("casteCategory", _casteCategory);
		_columnOriginalValues.put("mobile", _mobile);
		_columnOriginalValues.put("emailAddress", _emailAddress);
		_columnOriginalValues.put("dateOfJoiningUnit", _dateOfJoiningUnit);
		_columnOriginalValues.put("gpfnpsType", _gpfnpsType);
		_columnOriginalValues.put("gpfnpsNumber", _gpfnpsNumber);
		_columnOriginalValues.put("sectionId", _sectionId);
		_columnOriginalValues.put("section", _section);
		_columnOriginalValues.put("sectionCode", _sectionCode);
		_columnOriginalValues.put("loginId", _loginId);
		_columnOriginalValues.put("idamUser", _idamUser);
		_columnOriginalValues.put("emailAccess", _emailAccess);
		_columnOriginalValues.put("digitalSigning", _digitalSigning);
		_columnOriginalValues.put("eGovAccess", _eGovAccess);
		_columnOriginalValues.put("pisAccess", _pisAccess);
		_columnOriginalValues.put("state_", _state);
		_columnOriginalValues.put("idamUserCreated", _idamUserCreated);
		_columnOriginalValues.put("employeeCreated", _employeeCreated);
		_columnOriginalValues.put("appUserCreated", _appUserCreated);
		_columnOriginalValues.put("postBox", _postBox);
		_columnOriginalValues.put("rank_", _rank);
		_columnOriginalValues.put("description", _description);
		_columnOriginalValues.put("reason", _reason);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");
		attributeNames.put("state_", "state");
		attributeNames.put("rank_", "rank");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("singleUserRegistrationId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("status", 256L);

		columnBitmasks.put("statusByUserId", 512L);

		columnBitmasks.put("statusByUserName", 1024L);

		columnBitmasks.put("statusDate", 2048L);

		columnBitmasks.put("recordNo", 4096L);

		columnBitmasks.put("unitId", 8192L);

		columnBitmasks.put("unit", 16384L);

		columnBitmasks.put("personalNo", 32768L);

		columnBitmasks.put("firstName", 65536L);

		columnBitmasks.put("middleName", 131072L);

		columnBitmasks.put("lastName", 262144L);

		columnBitmasks.put("genderId", 524288L);

		columnBitmasks.put("gender", 1048576L);

		columnBitmasks.put("designationId", 2097152L);

		columnBitmasks.put("designation", 4194304L);

		columnBitmasks.put("designationCode", 8388608L);

		columnBitmasks.put("tradeId", 16777216L);

		columnBitmasks.put("trade", 33554432L);

		columnBitmasks.put("tradeCode", 67108864L);

		columnBitmasks.put("gradeId", 134217728L);

		columnBitmasks.put("grade", 268435456L);

		columnBitmasks.put("gradeCode", 536870912L);

		columnBitmasks.put("dateOfBirth", 1073741824L);

		columnBitmasks.put("dateOfJoiningOrganization", 2147483648L);

		columnBitmasks.put("casteCategoryId", 4294967296L);

		columnBitmasks.put("casteCategory", 8589934592L);

		columnBitmasks.put("mobile", 17179869184L);

		columnBitmasks.put("emailAddress", 34359738368L);

		columnBitmasks.put("dateOfJoiningUnit", 68719476736L);

		columnBitmasks.put("gpfnpsType", 137438953472L);

		columnBitmasks.put("gpfnpsNumber", 274877906944L);

		columnBitmasks.put("sectionId", 549755813888L);

		columnBitmasks.put("section", 1099511627776L);

		columnBitmasks.put("sectionCode", 2199023255552L);

		columnBitmasks.put("loginId", 4398046511104L);

		columnBitmasks.put("idamUser", 8796093022208L);

		columnBitmasks.put("emailAccess", 17592186044416L);

		columnBitmasks.put("digitalSigning", 35184372088832L);

		columnBitmasks.put("eGovAccess", 70368744177664L);

		columnBitmasks.put("pisAccess", 140737488355328L);

		columnBitmasks.put("state_", 281474976710656L);

		columnBitmasks.put("idamUserCreated", 562949953421312L);

		columnBitmasks.put("employeeCreated", 1125899906842624L);

		columnBitmasks.put("appUserCreated", 2251799813685248L);

		columnBitmasks.put("postBox", 4503599627370496L);

		columnBitmasks.put("rank_", 9007199254740992L);

		columnBitmasks.put("description", 18014398509481984L);

		columnBitmasks.put("reason", 36028797018963968L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SingleUserOnboarding _escapedModel;

}